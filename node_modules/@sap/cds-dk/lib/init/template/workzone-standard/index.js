const cds = require('../../../cds')
const { readProject } = require('../../projectReader')
const { merge } = require('../../merge')
const { join } = require('path')
const { destination, destinations } = require('../../registries/mta')

module.exports = class extends require('../../plugin') {

    static help() {
      return 'SAP BTP Work Zone, Standard Edition'
    }

    requires() {
      return ['html5-repo', 'destination']
    }

    static hasInProduction(env) {
      return !!env.requires?.workzone
    }

    canRun() {
      if (cds.requires.multitenancy) {
        throw `SAP BTP Work Zone, Standard Edition does not support multitenancy yet.`
      }
      return true
    }

    async run() {
      const project = readProject()
      const { appUIPaths, appPath } = project
      await Promise.all(appUIPaths.map(p =>
        merge(__dirname, 'files/manifest.json.hbs').into(join(appPath, p, 'webapp/manifest.json'), { project })
      ))
      await merge({ cds: { requires: { workzone: true } } }).into('package.json')
    }

    async combine() {
      const project = readProject()
      const { hasMta } = project

      if (hasMta) {
          const additions = [destinations, destination]
          await merge(__dirname, 'files/mta.yaml.hbs').into('mta.yaml', { with: project, additions })
      }
  }
}
