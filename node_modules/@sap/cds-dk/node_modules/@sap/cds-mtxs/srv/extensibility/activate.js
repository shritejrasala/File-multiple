const cds = require('@sap/cds/lib')
const { getCompilerError } = require('../../lib/utils')

const activate = async function (tenant, tag, extCsn, bundles, csvs, sources, activate, req) {
  const async = cds.context.http?.req?.headers?.prefer === 'respond-async'
  try {
    const js = await cds.connect.to('cds.xt.JobsService')
    return await new Promise((resolve, reject) => {

      const cb = !async ? error => {
        if (error) {
          try {
            const errorObject = JSON.parse(error)
            return reject(errorObject)
          } catch {
            return reject(error)
          }
        }
        cds.context.http?.res.status(204)
        return resolve()
      } : () => {}

      const tx = js.tx({ tenant: req.tenant, user: new cds.User.Privileged() })
      const jobs = tx.enqueue('cds.xt.ExtensibilityService', 'activateExtension', [new Set([tenant])], { tag, extCsn, bundles, csvs, sources, activate }, cb)
      if (async) {
        cds.context.http?.res.status(202)
        resolve(jobs)
      }
    })
  } catch (err) {
    if (err.code === 'ERR_CDS_COMPILATION_FAILURE') req.reject(422, getCompilerError(err.messages))
    else req.reject(err)
  }
}

module.exports = { activate }
